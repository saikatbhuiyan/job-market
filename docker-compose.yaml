version: "3.9"

services:
  redis:
    container_name: redis-server
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --loglevel warning
    volumes:
      - redis-data:/data

  mysql:
    container_name: mysql-server
    image: mysql:8.0
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    env_file:
      - .env
  postgres:
    container_name: postgres-server
    image: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    env_file:
      - .env
  rabbitmq:
    container_name: rabbitmq-server
    image: rabbitmq:3.12-rc-management-alpine
    restart: always
    ports:
      # management
      - "15672:15672"
      # amqp
      - "5672:5672"
  elasticsearch:
    container_name: elasticsearch-server
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.1
    restart: always
    environment:
      ES_JAVA_OPTS: "-Xmx512m -Xms512m"
      bootstrap.memory_lock: "true"
      discovery.type: single-node
      network.host: 0.0.0.0
      transport.host: 127.0.0.1
      http.host: 0.0.0.0
      xpack.security.enabled: "false"
      xpack.monitoring.collection.enabled: "true"
    env_file:
      - .env
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - elastic
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  kibana:
    container_name: kibana-server
    image: docker.elastic.co/kibana/kibana:8.17.1 # Updated to match Elasticsearch version
    restart: always
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch-server:9200
      - XPACK_FLEET_AGENTS_ELASTICSEARCH_HOSTS=["http://elasticsearch-server:9200"]
      - SERVER_HOST=0.0.0.0
    env_file:
      - .env
    ports:
      - "5601:5601"
    volumes:
      - ./kibana.yml:/usr/share/kibana/config/kibana.yml:ro
    networks:
      - elastic
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5601/api/status || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  redis-data:
  mysql-data:
  postgres-data:
  elasticsearch-data:
    driver: local
networks:
  elastic:
    driver: bridge
